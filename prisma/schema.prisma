// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String      @id @default(cuid()) @db.VarChar(32)
  username           String?     @unique @db.VarChar(100)
  email              String?     @unique @db.VarChar(100)
  emailVerified      Boolean     @default(false)
  walletAddress      String      @unique @map("wallet_address") @db.VarChar(255)
  walletSigningNonce String      @map("wallet_signing_nonce") @db.VarChar(255)
  lastLoggedInAt     DateTime?   @map("last_logged_in_at") @db.Timestamp
  loginAttempts      Int         @map("log_in_attempts") @db.Integer
  lockoutExpiryAt    DateTime?   @map("lockout_expiry_at") @db.Timestamp
  roles              UserRole[]
  createdAt          DateTime    @default(now()) @map("created_at") @db.Timestamp
  updatedAt          DateTime    @default(now()) @map("updated_at") @db.Timestamp
  userTokens         UserToken[]

  @@map("users")
}

enum RoleType {
  Admin  @map("admin")
  User   @map("user")

  @@map("role")
}

model UserRole {
  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id") @db.VarChar(32)
  role   Role   @relation(fields: [roleId], references: [id])
  roleId Int    @map("role_id")

  @@id([userId, roleId])
  @@map("user_roles")
}

model Role {
  id    Int        @id @default(autoincrement())
  role  RoleType
  users UserRole[]

  @@map("roles")
}

enum TokenType {
  RefreshToken            @map("refresh_token")
  EmailVerificationToken  @map("email_verification_token")

  @@map("token_type")
}

model UserToken {
  user      User      @relation(fields: [userId], references: [id])
  userId    String    @map("user_id") @db.VarChar(32)
  tokenType TokenType @map("token_type")
  token     String    @unique @map("token") @db.VarChar(255)
  expiresAt DateTime? @map("expires_at") @db.Timestamp
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt DateTime  @default(now()) @map("updated_at") @db.Timestamp

  @@id([userId, tokenType])
  @@map("user_tokens")
}
